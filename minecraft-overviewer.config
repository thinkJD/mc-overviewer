worlds["survival"] = "/var/minecraft/world"

def bedFilter(poi):
    if poi['id'] == 'PlayerSpawn':
        poi['icon'] = 'bed_icon.png'
        image_html = "<style>.infoWindow img[src='{}'] {{display: none}}</style><img src='http://cravatar.tomheinan.com/{}/16' />".format(poi['icon'], poi['EntityId'])
        return "\n".join([image_html, "Current spawn point for {}".format(poi['EntityId']),
                           "X:{} Y:{} Z:{}".format(poi['x'], poi['y'], poi['z'])])
def screenshotFilter(poi):
    '''This looks for signs that have their first line in the 'Image:<id>' format, where <id> is an
    id from an Imgur.com image.'''
    if poi['id'] == 'Sign':
        if poi['Text1'].startswith('Image:'):
            poi['icon'] = "painting_icon.png"
            image_html = "<style>.infoWindow img[src='{icon}'] {{display: none}}</style><a href='http://imgur.com/{id}'><img src='http://imgur.com/{id}s.jpg' /></a>".format(icon=poi['icon'], id=poi['Text1'][6:])
            return "\n".join([image_html, poi['Text2'], poi['Text3'], poi['Text4']])

def chestFilter(poi):
    if poi['id'] == "Chest":
        return "Chest with %d items" % len(poi['Items'])

def playerIcons(poi):
    if poi['id'] == 'Player':
        poi['icon'] = "http://overviewer.org/avatar/%s" % poi['EntityId']
        return "Last known location for %s" % poi['EntityId']

def bedFilter(poi):
    '''This finds the beds and formats the popup bubble a bit.'''
    if poi['id'] == 'PlayerSpawn':
        poi['icon'] = 'bed_icon.png'
        image_html = "<style>.infoWindow img[src='{}'] {{display: none}}</style><img src='http://cravatar.tomheinan.com/{}/16' />".format(poi['icon'], poi['EntityId'])
        return "\n".join([image_html, "Current spawn point for {}".format(poi['EntityId']),
                           "X:{} Y:{} Z:{}".format(poi['x'], poi['y'], poi['z'])])
def signFilter(poi):
    if poi['id'] == 'Sign':
        return "\n".join([poi['Text1'], poi['Text2'], poi['Text3'], poi['Text4']])

renders["survivalday"] = {
    "world": "survival",
    "title": "Survival Daytime",
    "rendermode": smooth_lighting,
    "dimension": "overworld",
    "markers": [dict(name="Bettchen", filterFunction=bedFilter),
                dict(name="Screenshots", filterFunction=screenshotFilter),
                dict(name="Kaschper", filterFunction=playerIcons, checked=True),
                dict(name="Schilder", filterFunction=signFilter),
                dict(name="Kisten", filterFunction=chestFilter, createInfoWindow=False)]
}

renders['biomoverlay'] = {
    "world": "survival",
    "rendermode": [ClearBase(), BiomeOverlay()],
    "title": "Biom Overlay",
    "overlay": ["survivalday"]
}

renders["cave"] = {
    "world": "survival",
    "title": "Cave",
    "rendermode": "cave",
    "dimension": "overworld",
    "markers": [dict(name="Bettchen", filterFunction=bedFilter),
                dict(name="Screenshots", filterFunction=screenshotFilter),
                dict(name="Kaschper", filterFunction=playerIcons, checked=True),
                dict(name="Schilder", filterFunction=signFilter),
                dict(name="Kisten", filterFunction=chestFilter, createInfoWindow=False)]
}

renders["survivalnight"] = {
    "world": "survival",
    "title": "Survival Nighttime",
    "rendermode": smooth_night,
    "dimension": "overworld",
}

renders["survivalnether"] = {
    "world": "survival",
    "title": "Survival Nether",
    "rendermode": nether_smooth_lighting,
    "dimension": "nether",
}

renders["survivalnethersouth"] = {
    "world": "survival",
    "title": "Survival Nether",
    "rendermode": nether_smooth_lighting,
    "dimension": "nether",
    "northdirection" : "lower-right",
}

outputdir = "/var/minecraft/map"
texturepath = "/var/minecraft/textures.zip"

